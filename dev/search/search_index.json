{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":""},{"location":"#mkdocs-simple-plugin","title":"mkdocs-simple-plugin","text":"<p>This plugin enables you to build a documentation site from markdown interspersed within your repository using mkdocs.</p>"},{"location":"#about","title":"About","text":"<p>You may be wondering why you would want to generate a static site for your project without doing the typical \"wiki\" thing of consolidating all documentation within a single <code>docs</code> folder or using a single <code>README</code> file.</p> <ul> <li> <p>My repository is too big for a single documentation source.</p> <p>Sometimes it isn't feasible to consolidate all documentation within an upper level <code>docs</code> directory.  In general, if your codebase is too large to fit well within a single <code>include</code> directory, your codebase is also too large for documentation in a single <code>docs</code> directory.</p> <p>Since it's typically easier to keep documentation up to date when it lives as close to the code as possible, it is better to create multiple sources for documentation.</p> </li> <li> <p>My repository is too simple for advanced documentation.</p> <p>If your codebase is very very large, something like the monorepo plugin might better fit your needs.</p> <p>For most other medium+ repositories that have grown over time, you probably have scattered documentation throughout your code.  By combining all of that documentation while keeping folder structure, you can better surface and collaborate with others. And, let's face it.  That documentation is probably all in markdown since Github renders it nicely.</p> </li> <li> <p>I want a pretty documentation site without the hassle.</p> <p>Finally, you may be interested in this plugin if you have a desire for easy-to-generate stylized documentation.  This plugin lets you take documentation you may already have -- either in markdown files or in your code -- and formats them into a searchable documentation website.  You can keep your documentation where it is (thank you very much).</p> </li> </ul> <p>See mkdocs-simple-plugin for usage.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>See the contributing guide</p>"},{"location":"#license","title":"License","text":"<p>This software is licensed under Apache 2.0</p>"},{"location":"CONTRIBUTING/","title":"Contributing Guide","text":"<p>First off, thanks for taking the time to contribute! </p>"},{"location":"CONTRIBUTING/#the-basics","title":"The Basics","text":"<p>If you are looking to help with a code contribution, this project uses MKDocs for documentation generation, Python for the plugin, along with a splattering of Markdown and ShellScript.  I've included my VSCode workspace and a Docker development container.  Read about how I develop using VSCode and Docker. If you don't feel ready to make a code contribution yet, no problem! You can also check out the issues we have in the Github issue tracker.</p>"},{"location":"CONTRIBUTING/#how-to-contribute","title":"How to Contribute","text":"<p>Never made an open-source contribution before? Wondering how contributions work in this project? Here's a quick rundown!</p> <ol> <li> <p>Find an issue that you are interested in addressing or a feature that you would like to add in the issue tracker.  Don't see your issue?  Submit one!</p> </li> <li> <p>Fork the repository associated with the issue to your local GitHub account. This means that you will have a copy of the repository under your-GitHub-username/repository-name.</p> </li> <li> <p>Clone the repository to your local machine.</p> <pre><code>git clone https://github.com/github-username/mkdocs-simple-plugin.git\n</code></pre> </li> <li> <p>Create a new branch for your fix.</p> <pre><code>git checkout -b branch-name-here\n</code></pre> </li> <li> <p>Make the appropriate changes for the issue you are trying to address or the feature that you want to add.</p> </li> <li> <p>Add the file contents of the changed files to the \"snapshot\" git uses to manage the state of the project, also known as the index.</p> <pre><code>git add &lt;file_list&gt;\n</code></pre> </li> <li> <p>Insert a short message of the changes made to store the contents of the index with a descriptive message.</p> <pre><code>git commit -m\"Insert a short message of the changes made here\"\n</code></pre> </li> <li> <p>Push the changes to the remote repository</p> <pre><code>git push origin branch-name-here.\n</code></pre> </li> <li> <p>Submit a pull request to the upstream repository.</p> </li> <li> <p>Title the pull request with a short description of the changes made and the issue or bug number associated with your change. For example, you can title an issue like so \"Added more log outputting to resolve #4352\".</p> </li> <li> <p>In the description of the pull request, explain the changes that you made, any issues you think exist with the pull request you made, and any questions you have for the maintainer. It's OK if your pull request is not perfect (no pull request is), the reviewer will be able to help you fix any problems and improve it!</p> </li> <li> <p>Wait for the pull request to be reviewed by a maintainer.</p> </li> <li> <p>Make changes to the pull request if the reviewing maintainer recommends them.</p> </li> <li> <p>Celebrate your success after your pull request is merged!</p> </li> </ol>"},{"location":"CONTRIBUTING/#getting-help","title":"Getting Help","text":"<p>If you need help, you can ask questions on the issue tracker</p>"},{"location":"LICENSE/","title":"LICENSE","text":"<pre><code>                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <pre><code>  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.\n</code></pre> <p>Copyright 2022 Allison Thackston</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\");    you may not use this file except in compliance with the License.    You may obtain a copy of the License at</p> <pre><code>   http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an \"AS IS\" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.</p>"},{"location":"action/","title":"Github Action","text":""},{"location":"action/#deploy-from-github-actions","title":"Deploy from GitHub Actions","text":"<p>Create a YAML file with the following contents in the <code>.github/workflows</code> directory in your repository</p> <pre><code>jobs:\n  docs:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n      - name: Build docs\n        id: mkdocs\n        uses: athackst/mkdocs-simple-plugin\n        with:\n          # (optional) Specify branch\n          publish_branch: gh-pages\n          # (optional) The URL of the repository the docs should point to\n          repo_url: https://github.com/owner/repository\n          # (optional) The name of the site\n          site_name: owner/repository\n          # (optional) The URL of the site\n          site_url: https://owner.github.io/repository\n          # (optional) The edit URI\n          edit_uri: edit/main/\n          # (optional) Specify a google analytics key\n          google_analytics: UA-XXXXXXX\n          # (optional) Specify a different theme [mkdocs|readthedocs|material]\n          theme: material\n          # (optional) Load a configuration file from a string\n          config: \"mkdocs.yml\"\n          # (optional) Version or alias.  Specify multiple aliases with space\n          # example: version: v0.1.0 latest\n          version: latest\n          # (optional) The version that will be served by the root of your site\n          default_version: latest\n          # (optional) Whether to push the docs to the remote branch\n          push: 1\n      - name: Upload artifact\n        uses: actions/upload-artifact@main\n        with:\n          name: 'github-pages'\n          # Get the filename of the artifact created by the action\n          path: ${{ steps.mkdocs.outputs.artifact }}\n          retention-days: 1\n</code></pre>"},{"location":"docker/","title":"Docker","text":"<p>Use this image to create a mkdocs site with the mkdocs-simple-plugin</p> <p>Using the docker image, you don't need to have the plugin or its dependencies installed on your system to build, test, and deploy a mkdocs generated site.</p>"},{"location":"docker/#run-in-a-docker-container","title":"Run in a docker container","text":"<p>Install, build and serve your docs:</p> <pre><code>docker run --rm -it -p 8000:8000 -v ${PWD}:/docs althack/mkdocs-simple-plugin:latest\n</code></pre> <p>Explanation of docker command-line options</p> command description <code>-p 8000:8000</code> [required] Map the mkdocs server port to a port on your localhost. <code>-v ${PWD}:/docs</code> [required] Mount the local directory into the docs directory to build site. <code>--rm</code> [optional] remove the docker image after it finishes running. <code>-it</code> [optional] run in an interactive terminal. <p>The docker image runs <code>mkdocs serve</code> by default.</p>"},{"location":"docker/#set-up-a-command-line-alias","title":"Set up a command-line alias","text":"<p>Add an alias for the docker command to serve docs from any workspace.</p> <pre><code>echo 'function mkdocs_simple_serve() {\n    local port=${1:-\"8000\"}\n    docker run --rm -it -p ${port}:8000 -v ${PWD}:/docs althack/mkdocs-simple-plugin:latest\n}' &gt;&gt; ~/.bashrc\n</code></pre>"},{"location":"examples/ok-mkdocs-readme/","title":"Index","text":""},{"location":"examples/ok-mkdocs-readme/#simple-readme","title":"Simple readme","text":""},{"location":"examples/ok-mkdocs-readme/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This is the simplest documentation site you could have.  \n# It's just a simple readme.\nsite_name: ok-mkdocs-readme\nplugins:\n  - simple\n</code></pre>"},{"location":"examples/ok-mkdocs-readme/#input","title":"Input","text":"<pre><code>ok-mkdocs-readme/\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"examples/ok-mkdocs-readme/#output","title":"Output","text":"<pre><code>site/\n\u2514\u2500\u2500 index.html\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-extensions/","title":"Index","text":""},{"location":"examples/ok-mkdocs-docs-extensions/#extra-extensions","title":"Extra extensions","text":""},{"location":"examples/ok-mkdocs-docs-extensions/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This example shows how extensions are copied to the result\nsite_name: ok-mkdocs-docs-extensions\nplugins:\n  - simple:\n      include: [\".txt\"]\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-extensions/#input","title":"Input","text":"<pre><code>ok-mkdocs-docs-extensions/\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 test.txt\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-extensions/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 index.html\n\u2514\u2500\u2500 test.txt\n</code></pre>"},{"location":"examples/ok-mkdocs-ignore-site-dir/","title":"Hello World","text":"<p>This is for testing files in the main directory.</p>"},{"location":"examples/ok-with-rename/","title":"Index","text":""},{"location":"examples/ok-with-rename/#rename-a-file","title":"Rename a file","text":""},{"location":"examples/ok-with-rename/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This example shows how to rename a single file in the doc site.\nsite_name: ok-with-rename\nplugins:\n  - simple:\n      semiliterate:\n      - pattern: '^foo.bar$'\n        destination: baz.md\n</code></pre>"},{"location":"examples/ok-with-rename/#input","title":"Input","text":"<pre><code>ok-with-rename/\n\u251c\u2500\u2500 foo.bar\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"examples/ok-with-rename/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 baz/\n\u2502   \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 index.html\n</code></pre>"},{"location":"examples/ok-with-mkdocstrings/","title":"Index","text":""},{"location":"examples/ok-with-mkdocstrings/#extract-docs-with-mkdocstrings","title":"Extract docs with mkdocstrings","text":""},{"location":"examples/ok-with-mkdocstrings/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># You can even use this with other plugins, like \n# [mkdocstrings](https://pypi.org/project/mkdocstrings/), to achieve advanced \n# configurations.\nsite_name: ok-with-mkdocstrings\nplugins:\n  - simple\n  - mkdocstrings\n</code></pre>"},{"location":"examples/ok-with-mkdocstrings/#input","title":"Input","text":"<pre><code>ok-with-mkdocstrings/\n\u251c\u2500\u2500 example.md\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 module.py\n\u2514\u2500\u2500 README.md\n</code></pre> <p>module.py <pre><code>\"\"\"md\n\n## Python Version\n\nYou can put _markdown_ in triple-quoted strings in Python.\n\nYou can even combine it with mkdocstrings to automatically generate your source\ndocumentation!\n\n::: module.main\n    handler: python\n    options:\n        show_root_heading: true\n        show_source: false\n        heading_level: 3\n\"\"\"\n\n\ndef main():\n    \"\"\"Test function which takes no parameters.\n\n    It says \"Hello, world!\"\n    \"\"\"\n    print(\"Hello, world!\")\n    return 0\n</code></pre></p>"},{"location":"examples/ok-with-mkdocstrings/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 example/\n\u2502   \u2514\u2500\u2500 index.html\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 module/\n\u2502   \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 objects.inv\n</code></pre> <p>module</p>"},{"location":"examples/ok-with-mkdocstrings/#python-version","title":"Python Version","text":"<p>You can put markdown in triple-quoted strings in Python.</p> <p>You can even combine it with mkdocstrings to automatically generate your source documentation!</p>"},{"location":"examples/ok-with-mkdocstrings/#module.main","title":"<code>module.main()</code>","text":"<p>Test function which takes no parameters.</p> <p>It says \"Hello, world!\"</p>"},{"location":"examples/ok-with-mkdocstrings/module/","title":"Module","text":""},{"location":"examples/ok-with-mkdocstrings/module/#python-version","title":"Python Version","text":"<p>You can put markdown in triple-quoted strings in Python.</p> <p>You can even combine it with mkdocstrings to automatically generate your source documentation!</p> <p>::: module.main     handler: python     options:         show_root_heading: true         show_source: false         heading_level: 3</p>"},{"location":"examples/ok-with-mkdocstrings/example/","title":"Example","text":"<p>The extracted module documentation includes the documentation from the module header, and has invoked mkdocstrings to render api documentation based on Python docstrings.</p> <p>Compare the webpage linked above with the raw <code>module.md</code> generated by extraction from <code>module.py</code>:</p> <pre><code>## Python Version\n\nYou can put _markdown_ in triple-quoted strings in Python.\n\nYou can even combine it with mkdocstrings to automatically generate your source\ndocumentation!\n\n::: module.main\n    handler: python\n    options:\n        show_root_heading: true\n        show_source: false\n        heading_level: 3\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-ignore/","title":"Index","text":""},{"location":"examples/ok-mkdocs-docs-ignore/#ignore-a-folder","title":"Ignore a folder","text":""},{"location":"examples/ok-mkdocs-docs-ignore/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This example shows how a subfolder can be ignored.\nsite_name: ok-mkdocs-docs-ignore\nplugins:\n  - simple:\n      ignore: [\"subfolder\"]\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-ignore/#input","title":"Input","text":"<pre><code>ok-mkdocs-docs-ignore/\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 other-folder/\n\u2502   \u2514\u2500\u2500 subfolder/\n\u2502       \u251c\u2500\u2500 draft.md\n\u2502       \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 subfolder/\n\u2502   \u251c\u2500\u2500 draft.md\n\u2502   \u2514\u2500\u2500 index.md\n\u2514\u2500\u2500 test.md\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-ignore/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 other-folder/\n\u2502   \u2514\u2500\u2500 subfolder/\n\u2502       \u251c\u2500\u2500 draft/\n\u2502       \u2502   \u2514\u2500\u2500 index.html\n\u2502       \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 test/\n    \u2514\u2500\u2500 index.html\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-ignore/test/","title":"Test","text":"<p>This is a test file.</p>"},{"location":"examples/ok-mkdocs-docs-ignore/subfolder/","title":"Hello World","text":"<p>This is for testing files in the docs directory.</p>"},{"location":"examples/ok-mkdocs-docs-ignore/subfolder/draft/","title":"Draft","text":"<p>This is a draft file.</p>"},{"location":"examples/ok-mkdocs-docs-ignore/other-folder/subfolder/","title":"Hello World","text":"<p>This is for testing files in the docs directory.</p>"},{"location":"examples/ok-mkdocs-docs-ignore/other-folder/subfolder/draft/","title":"Draft","text":"<p>This is a draft file.</p>"},{"location":"examples/ok-source-with-snippet/","title":"Index","text":""},{"location":"examples/ok-source-with-snippet/#extract-a-snippet","title":"Extract a snippet","text":""},{"location":"examples/ok-source-with-snippet/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This is example shows to to create a snippet from a file.  For example, you \n# can use a snippet to rearrange contents using inclusion or create a new pages \n# per module.\nsite_name: ok-source-with-snippet\nplugins:\n  - simple\n</code></pre>"},{"location":"examples/ok-source-with-snippet/#input","title":"Input","text":"<pre><code>ok-source-with-snippet/\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 module.py\n\u251c\u2500\u2500 README.md\n</code></pre> <p>module.py <pre><code>\"\"\"md\n\n## Main file\n\nYou can even make snippets as separate files.\n\n\"\"\"\n\n# md file=snippet.md\n#\n# ## Snippet\n#\n# This is a snippet from module.py.\n# /md\n\n\"\"\"&lt;md file=\"snippet2.md\"&gt;Another one.\n\n## Snippet2\n\nThis is another snippet from module.py\n\"\"\"\n\n\ndef main():\n    \"\"\"Main function which prints \"Hello, World!\"\"\"\n    print(\"Hello, world!\")\n    return 0\n</code></pre></p>"},{"location":"examples/ok-source-with-snippet/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 module/\n\u2502   \u2514\u2500\u2500 index.html\n\u251c\u2500\u2500 snippet/\n\u2502   \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 snippet2/\n    \u2514\u2500\u2500 index.html\n</code></pre> <p>module</p> <p>snippet</p> <p>snippet2</p>"},{"location":"examples/ok-source-with-snippet/#main-file","title":"Main file","text":"<p>You can even make snippets as separate files.</p>"},{"location":"examples/ok-source-with-snippet/#snippet","title":"Snippet","text":"<p>This is a snippet from module.py.</p>"},{"location":"examples/ok-source-with-snippet/#snippet2","title":"Snippet2","text":"<p>This is another snippet from module.py</p>"},{"location":"examples/ok-source-with-snippet/module/","title":"Module","text":""},{"location":"examples/ok-source-with-snippet/module/#main-file","title":"Main file","text":"<p>You can even make snippets as separate files.</p>"},{"location":"examples/ok-source-with-snippet/snippet/","title":"Snippet","text":""},{"location":"examples/ok-source-with-snippet/snippet/#snippet","title":"Snippet","text":"<p>This is a snippet from module.py.</p>"},{"location":"examples/ok-source-with-snippet/snippet2/","title":"Snippet2","text":""},{"location":"examples/ok-source-with-snippet/snippet2/#snippet2","title":"Snippet2","text":"<p>This is another snippet from module.py</p>"},{"location":"examples/ok-mkdocsignore/","title":"Index","text":""},{"location":"examples/ok-mkdocsignore/#ignore-with-mkdocsignore","title":"Ignore with .mkdocsignore","text":""},{"location":"examples/ok-mkdocsignore/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># Ignore files with a .mkdocsignore file.\nsite_name: ok-mkdocsignore\nplugins:\n  - simple\n</code></pre>"},{"location":"examples/ok-mkdocsignore/#input","title":"Input","text":"<pre><code>ok-mkdocsignore/\n\u251c\u2500\u2500 .mkdocsignore\n\u251c\u2500\u2500 hello/\n\u2502   \u251c\u2500\u2500 foo/\n\u2502   \u2502   \u251c\u2500\u2500 bar.md\n\u2502   \u2502   \u2514\u2500\u2500 foo.md\n\u2502   \u251c\u2500\u2500 hello.md\n\u2502   \u2514\u2500\u2500 world/\n\u2502       \u251c\u2500\u2500 .mkdocsignore\n\u2502       \u2514\u2500\u2500 world.md\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 test/\n    \u251c\u2500\u2500 bar.md\n    \u2514\u2500\u2500 foo.md\n</code></pre> <p>.mkdocsignore <pre><code># Ignore everything in the test folder\ntest\n# Ignore the foo file in hello/foo\nhello/foo/foo*\n</code></pre></p> <p>hello/world/.mkdocsignore <pre><code># Ignore everything in this folder\n</code></pre></p>"},{"location":"examples/ok-mkdocsignore/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 hello/\n\u2502   \u251c\u2500\u2500 foo/\n\u2502   \u2502   \u2514\u2500\u2500 bar/\n\u2502   \u2502       \u2514\u2500\u2500 index.html\n\u2502   \u2514\u2500\u2500 hello/\n\u2502       \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 index.html\n</code></pre>"},{"location":"examples/ok-mkdocsignore/hello/hello/","title":"Test Hello","text":"<p>This is a hello test.</p>"},{"location":"examples/ok-mkdocsignore/hello/foo/bar/","title":"Bar","text":"<p>This is for testing files in the hello/foo directory.</p>"},{"location":"examples/ok-source-extract/","title":"Index","text":""},{"location":"examples/ok-source-extract/#extract-docs-from-source","title":"Extract docs from source","text":""},{"location":"examples/ok-source-extract/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This examples shows how you can extract markdown from a source file.\nsite_name: ok-source-extract\nplugins:\n  - simple\n</code></pre>"},{"location":"examples/ok-source-extract/#input","title":"Input","text":"<pre><code>ok-source-extract/\n\u251c\u2500\u2500 main.c\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 module.py\n\u2514\u2500\u2500 README.md\n</code></pre> <p>main.c <pre><code>#include &lt;stdio.h&gt;\n\n/** md\n## Detailed documentation\n\n### block comments\n\nblock comments are added with `/** md` and conclude with `**\\/` tags.\n**/\n\n// md\n// ### line comments\n// \n// line comments are added with `// md` and conclude with `// end md` tags\n// end md\nint main() {\n  printf(\"Hello, world!\");\n  return 0;\n}\n</code></pre></p> <p>module.py <pre><code>\"\"\"md\n\n## Python Version\n\nYou can put _markdown_ in triple-quoted strings in Python.\n\"\"\"\n\n# md\n# ### inline comments\n#\n# It works in inline comments. The start and end markers must be on their own\n# lines.\n# /md\n\n\ndef main():\n    # noqa: D207\n    \"\"\"&lt;md trim=4 &gt;Main test.\n\n    ### docstrings\n\n    It works in docstrings. The start and end quotes must be on their own lines.\n    You can even tell it to remove leading whitespace with the 'trim' option.\n    \"\"\"\n    print(\"Hello, world!\")\n    return 0\n</code></pre></p>"},{"location":"examples/ok-source-extract/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 main/\n\u2502   \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 module/\n    \u2514\u2500\u2500 index.html\n</code></pre> <p>main</p> <p>module</p>"},{"location":"examples/ok-source-extract/#detailed-documentation","title":"Detailed documentation","text":""},{"location":"examples/ok-source-extract/#block-comments","title":"block comments","text":"<p>block comments are added with <code>/** md</code> and conclude with <code>**\\/</code> tags.</p>"},{"location":"examples/ok-source-extract/#line-comments","title":"line comments","text":"<p>line comments are added with <code>// md</code> and conclude with <code>// end md</code> tags</p>"},{"location":"examples/ok-source-extract/#python-version","title":"Python Version","text":"<p>You can put markdown in triple-quoted strings in Python.</p>"},{"location":"examples/ok-source-extract/#inline-comments","title":"inline comments","text":"<p>It works in inline comments. The start and end markers must be on their own lines.</p>"},{"location":"examples/ok-source-extract/#docstrings","title":"docstrings","text":"<p>It works in docstrings. The start and end quotes must be on their own lines. You can even tell it to remove leading whitespace with the 'trim' option.</p>"},{"location":"examples/ok-source-extract/module/","title":"Module","text":""},{"location":"examples/ok-source-extract/module/#python-version","title":"Python Version","text":"<p>You can put markdown in triple-quoted strings in Python.</p>"},{"location":"examples/ok-source-extract/module/#inline-comments","title":"inline comments","text":"<p>It works in inline comments. The start and end markers must be on their own lines.</p>"},{"location":"examples/ok-source-extract/module/#docstrings","title":"docstrings","text":"<p>It works in docstrings. The start and end quotes must be on their own lines. You can even tell it to remove leading whitespace with the 'trim' option.</p>"},{"location":"examples/ok-source-extract/main/","title":"Main","text":""},{"location":"examples/ok-source-extract/main/#detailed-documentation","title":"Detailed documentation","text":""},{"location":"examples/ok-source-extract/main/#block-comments","title":"block comments","text":"<p>block comments are added with <code>/** md</code> and conclude with <code>**\\/</code> tags.</p>"},{"location":"examples/ok-source-extract/main/#line-comments","title":"line comments","text":"<p>line comments are added with <code>// md</code> and conclude with <code>// end md</code> tags</p>"},{"location":"examples/ok-with-macros/","title":"Index","text":""},{"location":"examples/ok-with-macros/#extract-docs-with-macros","title":"Extract docs with macros","text":""},{"location":"examples/ok-with-macros/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># You can even use this with other plugins, like\n# [macros](https://pypi.org/project/mkdocs-macros-plugin/) to achieve advanced\n# configurations.\nsite_name: ok-with-macros\ndocs_dir: /tmp/mkdocs-simple/ok-with-macros/docs\nplugins:\n    - search\n    - simple:\n          include:\n              - \".yml\"\n    - macros:\n          include_dir: \".\"\n          verbose: True\nextra:\n    test: True\n</code></pre>"},{"location":"examples/ok-with-macros/#input","title":"Input","text":"<pre><code>ok-with-macros/\n\u251c\u2500\u2500 example.md\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 module.py\n\u2514\u2500\u2500 README.md\n</code></pre> <p>module.py <pre><code>\"\"\"md\n\n## Python Version\n\nYou can put _markdown_ in triple-quoted strings in Python.\n\nYou can even use macros to inject other markdown here!\n\nFor example, here's the config file:\n\n````yaml\n{% if test %}\n{% include \"mkdocs.yml\" %}\n{% endif %}\n````\n\"\"\"\n\n\ndef main():\n    \"\"\"Test function which takes no parameters.\n\n    It says \"Hello, world!\"\n    \"\"\"\n    print(\"Hello, world!\")\n    return 0\n</code></pre></p>"},{"location":"examples/ok-with-macros/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 example/\n\u2502   \u2514\u2500\u2500 index.html\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 mkdocs-test.yml\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 module/\n    \u2514\u2500\u2500 index.html\n</code></pre> <p>example</p> <p>module</p>"},{"location":"examples/ok-with-macros/#example","title":"Example","text":"<p>Here's a printout of the plugin's config file, which I've included using a jinja-style macro.</p> <pre><code>\nsite_name: ok-with-macros\ndocs_dir: /tmp/mkdocs-simple/ok-with-macros/docs\nplugins:\n  - search\n  - simple:\n      include:\n        - .yml\n  - macros:\n      include_dir: .\n      verbose: true\nedit_uri: ''\nextra:\n  test: true\n\n</code></pre>"},{"location":"examples/ok-with-macros/#python-version","title":"Python Version","text":"<p>You can put markdown in triple-quoted strings in Python.</p> <p>You can even use macros to inject other markdown here!</p> <p>For example, here's the config file:</p> <pre><code>\nsite_name: ok-with-macros\ndocs_dir: /tmp/mkdocs-simple/ok-with-macros/docs\nplugins:\n  - search\n  - simple:\n      include:\n        - .yml\n  - macros:\n      include_dir: .\n      verbose: true\nedit_uri: ''\nextra:\n  test: true\n\n</code></pre>"},{"location":"examples/ok-with-macros/module/","title":"Module","text":""},{"location":"examples/ok-with-macros/module/#python-version","title":"Python Version","text":"<p>You can put markdown in triple-quoted strings in Python.</p> <p>You can even use macros to inject other markdown here!</p> <p>For example, here's the config file:</p>"},{"location":"examples/ok-with-macros/example/","title":"Example","text":"<p>Here's a printout of the plugin's config file, which I've included using a jinja-style macro.</p>"},{"location":"examples/ok-mkdocs-docs/docs/","title":"Just a docs folder","text":"<p>This example shows how this plugin can be used with just a docs directory</p>"},{"location":"examples/ok-mkdocs-docs/docs/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code>site_name: project\nplugins:\n  - simple\n</code></pre>"},{"location":"examples/ok-mkdocs-docs/docs/#input","title":"Input","text":"<pre><code>project\n\u2502\n\u2514\u2500\u2500\u2500docs\n\u2502   \u2502   README.md\n</code></pre>"},{"location":"examples/ok-mkdocs-docs/docs/#output","title":"Output","text":"<pre><code>project\n\u2502\n\u2514\u2500\u2500\u2500docs\n\u2502   \u2502   README.md \n\u2502\n\u2514\u2500\u2500\u2500site\n\u2502   \u2502   index.html\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-include/","title":"Index","text":""},{"location":"examples/ok-mkdocs-docs-include/#only-include-a-specific-folder","title":"Only include a specific folder","text":""},{"location":"examples/ok-mkdocs-docs-include/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This example shows how to only include from a specific folder\nsite_name: ok-mkdocs-docs-include\nplugins:\n  - simple:\n      folders: [\"subfolder/**\"]\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-include/#input","title":"Input","text":"<pre><code>ok-mkdocs-docs-include/\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 subfolder/\n\u2502   \u251c\u2500\u2500 draft.md\n\u2502   \u2514\u2500\u2500 index.md\n\u2514\u2500\u2500 test.md\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-include/#output","title":"Output","text":"<pre><code>site/\n\u2514\u2500\u2500 subfolder/\n    \u251c\u2500\u2500 draft/\n    \u2502   \u2514\u2500\u2500 index.html\n    \u2514\u2500\u2500 index.html\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-include/test/","title":"Test","text":"<p>This is a test file.</p>"},{"location":"examples/ok-mkdocs-docs-include/subfolder/","title":"Hello World","text":"<p>This is for testing files in the docs directory.</p>"},{"location":"examples/ok-mkdocs-docs-include/subfolder/draft/","title":"Draft","text":"<p>This is a draft file.</p>"},{"location":"examples/ok-mkdocs-docs-no-merge/","title":"Index","text":""},{"location":"examples/ok-mkdocs-docs-no-merge/#dont-merge-docs-folder","title":"Don't merge docs folder","text":""},{"location":"examples/ok-mkdocs-docs-no-merge/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This example shows how to keep the docs folder embedded within your other docs.\nsite_name: ok-mkdocs-docs-no-merge\nplugins:\n  - simple:\n        merge_docs_dir: false\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-no-merge/#input","title":"Input","text":"<pre><code>ok-mkdocs-docs-no-merge/\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 draft.md\n\u2502   \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 test.md\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-no-merge/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 draft/\n\u2502   \u2502   \u2514\u2500\u2500 index.html\n\u2502   \u2514\u2500\u2500 index.html\n\u251c\u2500\u2500 index.html\n\u2514\u2500\u2500 test/\n    \u2514\u2500\u2500 index.html\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-no-merge/test/","title":"Test","text":"<p>This is a test file.</p>"},{"location":"examples/ok-mkdocs-docs-no-merge/docs/","title":"Hello World","text":"<p>This is for testing files in the docs directory.</p>"},{"location":"examples/ok-mkdocs-docs-no-merge/docs/draft/","title":"Draft","text":"<p>This is a draft file.</p>"},{"location":"examples/ok-source-replace/","title":"Index","text":""},{"location":"examples/ok-source-replace/#advanced-replacement","title":"Advanced replacement","text":""},{"location":"examples/ok-source-replace/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This example shows how to replace lines with regex expressions!\nsite_name: ok-source-replace\nplugins:\n  - simple:\n      semiliterate:\n        - pattern: \\.py$\n          extract:\n            - start: ^\\s*\"\"\"\\W?md\\b\n              stop: ^\\s*\"\"\"\\s*$\n              replace: \n                # replace \"foo\" with \"bar\"\n                - [\"(.*)foo(.*)$\", \"\\\\1bar\\\\2\"] \n                # only capture what's after args and replace with parameter prefix\n                - [\"args:(.*)$\",\"parameters:\\\\1\"] \n                # capture everything after `only_this:`\n                - \"only_this:(.*)$\"\n                # drop lines starting with drop \n                - \"^drop\"\n</code></pre>"},{"location":"examples/ok-source-replace/#input","title":"Input","text":"<pre><code>ok-source-replace/\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 module.py\n\u2514\u2500\u2500 README.md\n</code></pre> <p>module.py <pre><code>\"\"\"md\n\n## Python Version\n\nYou can put _markdown_ in triple-quoted strings in Python.\n\nYou can even replace things!\n\nYou should see foo replaced by bar in this sentence.\n\nargs: This line should start with `parameters`.\n\nblah blah blah only_this: Only this is captured.\n\ndrop this line!\n\"\"\"\n\n\ndef main():\n    \"\"\"Main test.\"\"\"\n    print(\"Hello, world!\")\n    return 0\n</code></pre></p>"},{"location":"examples/ok-source-replace/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 index.html\n\u2514\u2500\u2500 module/\n    \u2514\u2500\u2500 index.html\n</code></pre> <p>module</p>"},{"location":"examples/ok-source-replace/#python-version","title":"Python Version","text":"<p>You can put markdown in triple-quoted strings in Python.</p> <p>You can even replace things!</p> <p>You should see bar replaced by bar in this sentence.</p> <p>parameters: This line should start with <code>parameters</code>.</p> <p>Only this is captured.</p>"},{"location":"examples/ok-source-replace/module/","title":"Module","text":""},{"location":"examples/ok-source-replace/module/#python-version","title":"Python Version","text":"<p>You can put markdown in triple-quoted strings in Python.</p> <p>You can even replace things!</p> <p>You should see foo replaced by bar in this sentence.</p> <p>args: This line should start with <code>parameters</code>.</p> <p>blah blah blah only_this: Only this is captured.</p> <p>drop this line!</p>"},{"location":"examples/ok-mkdocs-inline-settings/","title":"Index","text":""},{"location":"examples/ok-mkdocs-inline-settings/#extract-with-inline-settings","title":"Extract with inline settings","text":""},{"location":"examples/ok-mkdocs-inline-settings/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This is the simplest documentation site you could have.  \n# It's just a simple readme.\nsite_name: ok-mkdocs-inline-settings\nplugins:\n  - simple\n</code></pre>"},{"location":"examples/ok-mkdocs-inline-settings/#input","title":"Input","text":"<pre><code>ok-mkdocs-inline-settings/\n\u251c\u2500\u2500 hello_world.cpp\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 README.md\n</code></pre> <p>hello_world.cpp <pre><code>#include &lt;iostream&gt;\n\nint main() {\n  /** md file=main.md trim=2 stop=\"end-here\"\n  # Hello world\n\n  This is the main function for hello world.\n  It outputs \"Hello World!\" to the screen.\n\n  end-here\n  This shouldn't show up!\n  **/\n    std::cout &lt;&lt; \"Hello World!\";\n    return 0;\n}\n</code></pre></p>"},{"location":"examples/ok-mkdocs-inline-settings/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 index.html\n\u2514\u2500\u2500 main/\n    \u2514\u2500\u2500 index.html\n</code></pre> <p>main</p>"},{"location":"examples/ok-mkdocs-inline-settings/#hello-world","title":"Hello world","text":"<p>This is the main function for hello world. It outputs \"Hello World!\" to the screen.</p>"},{"location":"examples/ok-mkdocs-inline-settings/main/","title":"Hello world","text":"<p>This is the main function for hello world. It outputs \"Hello World!\" to the screen.</p>"},{"location":"examples/ok-mkdocs-docs-merge/","title":"Index","text":""},{"location":"examples/ok-mkdocs-docs-merge/#merge-into-docs-folder","title":"Merge into docs folder","text":""},{"location":"examples/ok-mkdocs-docs-merge/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This example shows how to merge a docs folder with other documentation.\nsite_name: ok-mkdocs-docs-merge\nplugins:\n  - simple\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-merge/#input","title":"Input","text":"<pre><code>ok-mkdocs-docs-merge/\n\u251c\u2500\u2500 clean.sh\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 draft.md\n\u2502   \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 test.md\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-merge/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 draft/\n\u2502   \u2514\u2500\u2500 index.html\n\u251c\u2500\u2500 index.html\n\u2514\u2500\u2500 test/\n    \u2514\u2500\u2500 index.html\n</code></pre>"},{"location":"examples/ok-mkdocs-docs-merge/test/","title":"Test","text":"<p>This is a test file.</p>"},{"location":"examples/ok-mkdocs-docs-merge/docs/","title":"Hello World","text":"<p>This is for testing files in the docs directory.</p>"},{"location":"examples/ok-mkdocs-docs-merge/docs/draft/","title":"Draft","text":"<p>This is a draft file.</p>"},{"location":"examples/ok-mkdocs-custom-extract/","title":"Index","text":""},{"location":"examples/ok-mkdocs-custom-extract/#front-matter-extraction","title":"Front matter extraction","text":""},{"location":"examples/ok-mkdocs-custom-extract/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This example shows how to set up custom extraction modes. Litcoffee files\n# consist of interspersed Markdown and Coffeescript code. The pattern\n# defined here extracts a documentation page from each such file, consisting of:\n# everything from the beginning of the file to the first line of code\n# (a line indented by at least four spaces), together with any later Markdown\n# block preceded by a comment containing `# DOCPAGE`.\n#\n# Similarly, you may want to have to have a custom extraction even for a\n# standard file pattern, or for one particular file; the `drone.yml` pattern\n# could for example extract development documentation from a Drone yml file.\n# Note this latter pattern takes advantage of the fact that you can have just\n# a single top-level block of parameters in an `extract:` section.\nsite_name: ok-mkdocs-custom-extract\nplugins:\n  - simple:\n      semiliterate:\n        - pattern: '\\.litcoffee'\n          extract:\n            - {stop: '^\\s{4,}\\S'}  # No start, so active from beginning\n            - {start: '# DOCPAGE', stop: '^\\s{4,}\\S'}\n        - pattern: 'drone.yml'\n          destination: 'drone_develop.md'\n          extract:\n            start: '### develop'\n            stop: '^\\s*###'\n            replace: ['^# (.*\\s*)$', '^\\s*-(.*\\s*)$']\n</code></pre>"},{"location":"examples/ok-mkdocs-custom-extract/#input","title":"Input","text":"<pre><code>ok-mkdocs-custom-extract/\n\u251c\u2500\u2500 drone.yml\n\u251c\u2500\u2500 fibo.litcoffee\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 README.md\n</code></pre> <p>fibo.litcoffee <pre><code>This paragraph is here to make sure the extraction starts immediately.\n# Coffee Fibonacci\n\nAlthough trite, this is an example of the sum recurrence.\n\n    fib = (n) -&gt;\n      # Base cases\n      if n in [ 1 , 2 ]\n        return 1\n      # Recursive calls\n      fib(n-1) + fib(n-2)\n\n## Example usage\nThis is perfectly good Markdown commentary, but will not appear in the\nextracted doc page.\n\n    fib(3) # =&gt; fib(2) + fib(1) =&gt; 2\n\n    # DOCPAGE\n## Complexity\nThis note about complexity will appear in the doc page.\n</code></pre></p>"},{"location":"examples/ok-mkdocs-custom-extract/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 drone_develop/\n\u2502   \u2514\u2500\u2500 index.html\n\u251c\u2500\u2500 fibo/\n\u2502   \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 index.html\n</code></pre> <p>drone_develop</p> <p>fibo</p> <p>This paragraph is here to make sure the extraction starts immediately.</p>"},{"location":"examples/ok-mkdocs-custom-extract/#developing","title":"Developing","text":""},{"location":"examples/ok-mkdocs-custom-extract/#_1","title":"Index","text":"<p>You can clone the repository with</p> <pre><code>git clone https://this_is_a_dummy_url\n</code></pre> <p>You can build the distribution with</p> <pre><code> pip install build\n python -m build .\n</code></pre> <p>That will produce a <code>.whl</code> file in the <code>dist</code> subdirectory.</p>"},{"location":"examples/ok-mkdocs-custom-extract/#coffee-fibonacci","title":"Coffee Fibonacci","text":"<p>Although trite, this is an example of the sum recurrence.</p>"},{"location":"examples/ok-mkdocs-custom-extract/#complexity","title":"Complexity","text":"<p>This note about complexity will appear in the doc page.</p>"},{"location":"examples/ok-mkdocs-ignore-file/","title":"Index","text":""},{"location":"examples/ok-mkdocs-ignore-file/#ignore-a-file","title":"Ignore a file","text":""},{"location":"examples/ok-mkdocs-ignore-file/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code># This tests if the site directory is ignored in both build and serve.\nsite_name: ok-mkdocs-ignore-file\nplugins:\n- simple:\n</code></pre>"},{"location":"examples/ok-mkdocs-ignore-file/#input","title":"Input","text":"<pre><code>ok-mkdocs-ignore-file/\n\u251c\u2500\u2500 hello_world.cpp\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 test.md\n</code></pre> <p>hello_world.cpp <pre><code>/** md-ignore\n\n# Ignore me\n\nIgnore everything beyond the first line since it contains md-ignore.\n**/\n\n#include &lt;iostream&gt;\n\nint main() {\n  /** md\n  # Hello world\n\n  This is the main function for hello world.\n  It outputs \"Hello World!\" to the screen.\n  **/\n    std::cout &lt;&lt; \"Hello World!\";\n    return 0;\n}\n</code></pre></p>"},{"location":"examples/ok-mkdocs-ignore-file/#output","title":"Output","text":"<pre><code>site/\n\u251c\u2500\u2500 index.html\n\u2514\u2500\u2500 test/\n    \u2514\u2500\u2500 index.html\n</code></pre>"},{"location":"examples/ok-mkdocs-ignore-file/test/","title":"Hello World","text":"<p>This is for testing files in the main directory.</p>"},{"location":"mkdocs_simple_plugin/","title":"Package Guide","text":""},{"location":"mkdocs_simple_plugin/#prerequisites","title":"Prerequisites","text":"<p>You will need to have MKDocs installed on your system. I recommend installing it via pip to get the latest version.</p> <pre><code>sudo apt-get update\nsudo apt-get install -y --no-install-recommends \\\n python3-pip \\\n libcairo2-dev \\\n libfreetype6-dev \\\n libffi-dev \\\n libjpeg-dev \\\n libpng-dev \\\n libz-dev\n\npip install --upgrade pip\npip install --user -r requirements.txt\n</code></pre>"},{"location":"mkdocs_simple_plugin/#building","title":"Building","text":"<p>Building this package requires  using <code>mkdocs_simple_gen</code> to generate the site. <pre><code>mkdocs_simple_gen --build -- --verbose\n</code></pre></p>"},{"location":"mkdocs_simple_plugin/#testing","title":"Testing","text":""},{"location":"mkdocs_simple_plugin/#lint","title":"Lint","text":"<p>Linting helps maintain style consistency.  This package follows the google  style guide.  Conformity is enforced with flake8 and pydodstyle.</p> <pre><code>./tests/run_linters.sh\n</code></pre> Code <pre><code>echo \"Running flake8 linter --------&gt;\"\nflake8 --count .\n\necho \"Running pydocstyle\"\npydocstyle --count .\n</code></pre>"},{"location":"mkdocs_simple_plugin/#unit-tests","title":"Unit tests","text":"<p>Unit tests help ensure individual functions perform as expected.  Unit tests in this module use the the standard python unittest framework.</p> <pre><code>./tests/run_unit_tests.sh\n</code></pre> Code <pre><code>python3 -m unittest tests/test_*.py\n</code></pre>"},{"location":"mkdocs_simple_plugin/#integration-tests","title":"Integration tests","text":"<p>Integration testing allows the plugin to be tested with mkdocs using example configurations.</p> <p>Integration testing uses bats, install it with</p> <p><pre><code>sudo apt-get install bats\n</code></pre> Then run the tests</p> <pre><code>./tests/run_integration_tests.sh\n</code></pre> Code <pre><code>./examples/gen_readme.py\n./tests/integration.bats\n</code></pre>"},{"location":"mkdocs_simple_plugin/#different-python-versions","title":"Different Python versions","text":"<p>You can even test the package with different versions of python in a container by running the test_local script.  This builds a docker container with the version of python you specify and runs the integration tests within the container.</p> <pre><code>./tests/run_local_tests.sh\n</code></pre> <p>Change the python version by setting the environment variable <code>PYTHON_V_ONLY</code></p> <pre><code>./tests/run_local_tests.sh -e PYTHON_V_ONLY=\"3.10\"\n</code></pre> <p>Python 3.x, 3.8, 3.9, 3.10, 3.11 supported.</p> Code <pre><code>set -e\n\nEnd-to-end testing via Bats (Bash automated tests)\nfunction docker_run_integration_tests() {\ndocker build -t mkdocs-simple-test-runner:$1 -f- . &lt;&lt;EOF\n FROM python:$1\n RUN apt-get -y update &amp;&amp; apt-get -y install bats gcc sudo\n RUN python3 -m pip install --upgrade pip\n COPY . /workspace\n WORKDIR /workspace\nEOF\n\necho \"&lt;-------- Running E2E tests via Bats in Docker (python:$1) --------&gt;\"\ndocker run --rm -it mkdocs-simple-test-runner:$1 tests/run_unit_tests.sh\ndocker run --rm -it mkdocs-simple-test-runner:$1 tests/run_linters.sh\ndocker run --rm -it mkdocs-simple-test-runner:$1 tests/run_integration_tests.sh\n}\n\nif [[ ! -z \"$PYTHON_V_ONLY\" ]]; then\n echo \"only v $PYTHON_V_ONLY\"\n docker_run_integration_tests \"$PYTHON_V_ONLY\"\nelse\n docker_run_integration_tests \"3\"\n docker_run_integration_tests \"3.8\"\n docker_run_integration_tests \"3.9\"\n docker_run_integration_tests \"3.10\"\n docker_run_integration_tests \"3.11\"\nfi\n</code></pre>"},{"location":"mkdocs_simple_plugin/#vscode","title":"VSCode","text":"<p>This package includes a preconfigured Visual Studio Code (VSCode) workspace and development container, making it easier to get started with developing your plugin. </p> <p>To get started with developing your plugin in VSCode, follow these steps:</p> <ol> <li> <p>Open the project in VSCode Open VSCode and select the \"Open Folder\" option from the File menu. Navigate to the location where you've saved the project and select the root folder of the project.</p> </li> <li> <p>Connect to the development container VSCode will automatically detect the presence of the development container and prompt you to connect to it. Follow the on-screen instructions to connect to the container.</p> </li> <li> <p>Run the build task To build the plugin, you can use the preconfigured build task in VSCode. This task is defined in the <code>build.sh</code> file and can be run by using the \"Run Build Task\" option from the Terminal menu or by using the Ctrl + Shift + B shortcut.</p> </li> <li> <p>Debug the plugin You can use the VSCode debugger to inspect the code and debug your plugin. The debugger is configured in the launch.json file and can be started by using the \"Start Debugging\" option from the Debug menu or by using the F5 key.</p> </li> </ol> <p>For more information on how to use VSCode and Docker for development, please refer to how I develop with VSCode and Docker and how I use VSCode tasks.</p>"},{"location":"mkdocs_simple_plugin/#packaging","title":"Packaging","text":"<p>The project uses Hatch to build and package the plugin </p> <p>Hatch is a Python packaging tool that helps simplify the process of building and distributing Python packages. It automates many manual steps, such as creating a setup script, creating a distribution package, and uploading the package to a repository, allowing developers to focus on writing code. Hatch is flexible and customizable, with options for specifying dependencies, including additional files, and setting up test suites, and is actively maintained with a growing community of users and contributors.</p>"},{"location":"mkdocs_simple_plugin/#build-the-package","title":"Build the package","text":"<pre><code>hatch build\n</code></pre>"},{"location":"mkdocs_simple_plugin/#publish-the-package","title":"Publish the package","text":"<pre><code>hatch publish\n</code></pre> <p>Please note that you may need to set up the appropriate credentials for the repository before you can publish the package. If you encounter any issues with publishing the package, please refer to the Hatch documentation for guidance.</p>"},{"location":"mkdocs_simple_plugin/plugin/","title":"Mkdocs Simple Plugin","text":"<p>A plugin for MkDocs that builds a documentation website from markdown content interspersed within your code, in markdown files or in block comments in your source files.</p> <p><code>simple</code> will search your project directory tree for documentation. By default, Markdown files and graphics files will be copied to your documentation site. Source files will also be searched for markdown embedded in minimally-structured comment blocks; these will be extracted into additional markdown files included in the documentation site.</p>"},{"location":"mkdocs_simple_plugin/plugin/#installation","title":"Installation","text":"<p>Install the plugin with pip.</p> <pre><code>pip install mkdocs-simple-plugin\n</code></pre> <p>Python 3.x, 3.8, 3.9, 3.10, 3.11 supported.</p>"},{"location":"mkdocs_simple_plugin/plugin/#usage","title":"Usage","text":"<p>Create a <code>mkdocs.yml</code> file in the root of your directory and add the <code>simple</code> plugin to its plugin list.</p> <pre><code>site_name: \"My site\"\nplugins:\n- search:\n- simple:\n</code></pre>"},{"location":"mkdocs_simple_plugin/plugin/#example-usage-defaults","title":"Example usage (defaults)","text":"<p>block comments starting with: <code>\"\"\"md</code></p> <pre><code>\"\"\"md\nThis is a documentation comment.\n\"\"\"\n</code></pre> <p>line comments starting with: <code># md</code> and ending with <code># /md</code>, stripping leading spaces and `#``, and only capturing comment lines.</p> <pre><code># md\n# This is a documentation comment.\n# /md\n</code></pre> <p>block comments starting with: <code>/** md</code></p> <pre><code>/** md\nThis is a documentation comment.\n**/\n</code></pre> <p>in line comments starting with <code>// md</code>, ending with <code>// end md</code>, stripping leading spaces and <code>//</code>, and only capturing comment lines.</p> <pre><code>// md\n// This is a documentation comment.\n// end md\n</code></pre> <p>block comments starting with <code>&lt;!-- md</code> and ending with <code>--&gt;</code></p> <pre><code>&lt;!-- md\nThis is a documentation comment.\n--&gt;\n</code></pre>"},{"location":"mkdocs_simple_plugin/plugin/#inline-parameters","title":"Inline parameters","text":"<p>Inline parameters configure a block's extraction.</p> <p>These parameters should be on the same line as the start block.</p> <p>For example:</p> <pre><code> /**md file=\"new_name.md\" trim=2 content=\"^\\s*\\/\\/\\s?(.*)$\"\n</code></pre>"},{"location":"mkdocs_simple_plugin/plugin/#set-output-file-name","title":"Set output file name","text":"<p>Filename is relative to the folder of the file being processed.</p> <pre><code>file=&lt;name&gt;\n</code></pre>"},{"location":"mkdocs_simple_plugin/plugin/#trim-the-front-of-a-line","title":"Trim the front of a line","text":"<p>Useful for removing leading spaces.</p> <pre><code>trim=#\n</code></pre>"},{"location":"mkdocs_simple_plugin/plugin/#capture-content","title":"Capture content","text":"<p>Regex expression to capture content, otherwise all lines are captured.</p> <pre><code>content=&lt;regex&gt;\n</code></pre>"},{"location":"mkdocs_simple_plugin/plugin/#stop-capture","title":"Stop capture","text":"<p>Regex expression to indicate capture should stop.</p> <pre><code>stop=&lt;regex&gt;\n</code></pre>"},{"location":"mkdocs_simple_plugin/plugin/#ignoring-files","title":"Ignoring files","text":"<p>You can add a <code>.mkdocsignore</code> file to ignore a directory or files by glob pattern.</p> <p>See example mkdocsignore usage</p>"},{"location":"mkdocs_simple_plugin/plugin/#default-settings","title":"Default settings","text":"<p>Below are the default settings of the plugin.</p> <pre><code>include_folders: null\nfolders:\n- '*'\nignore_folders: null\nignore:\n- venv\n- .cache/**\n- .devcontainer/**\n- .github/**\n- .vscode/**\n- '**/__pycache__/**'\n- .git/**\n- '*.egg-info'\nignore_hidden: null\nmerge_docs_dir: true\nbuild_docs_dir: null\nbuild_dir: ''\ncopy: false\ninclude_extensions: null\ninclude:\n- '*.bmp'\n- '*.tif'\n- '*.tiff'\n- '*.gif'\n- '*.svg'\n- '*.jpeg'\n- '*.jpg'\n- '*.jif'\n- '*.jiff'\n- '*.jp2'\n- '*.jpx'\n- '*.j2k'\n- '*.j2c'\n- '*.fpx'\n- '*.pcd'\n- '*.png'\n- '*.pdf'\n- CNAME\n- '*.snippet'\n- .pages\nsemiliterate:\n- pattern: ^LICENSE$\n- pattern: .*\n  terminate: ^\\W*md-ignore\n  extract:\n  - start: ^\\s*\"\"\"\\W?md\\b\n    stop: ^\\s*\"\"\"\\s*$\n  - start: ^\\s*#+\\W?md\\b\n    stop: ^\\s*#\\s?\\/md\\s*$\n    replace:\n    - ^\\s*# ?(.*\\n?)$\n    - ^.*$\n  - start: ^\\s*/\\*+\\W?md\\b\n    stop: ^\\s*\\*\\*/\\s*$\n  - start: ^\\s*\\/\\/+\\W?md\\b\n    stop: ^\\s*\\/\\/\\send\\smd\\s*$\n    replace:\n    - ^\\s*\\/\\/\\s?(.*\\n?)$\n    - ^.*$\n  - start: &lt;!--\\W?md\\b\n    stop: --&gt;\\s*$\n</code></pre> <p>Note</p> <p>If you add your own settings but want to also use any of these, you must reiterate the settings you want in your <code>mkdocs.yml</code> file.</p>"},{"location":"mkdocs_simple_plugin/plugin/#configuration-scheme","title":"Configuration scheme","text":""},{"location":"mkdocs_simple_plugin/plugin/#include_folders-renamed","title":"include_folders (renamed)","text":"<p>Renamed folders</p>"},{"location":"mkdocs_simple_plugin/plugin/#folders","title":"folders","text":"<p>Directories whose name matches a glob pattern in this list will be searched for documentation</p>"},{"location":"mkdocs_simple_plugin/plugin/#ignore_folders-renamed","title":"ignore_folders (renamed)","text":"<p>Renamed ignore</p>"},{"location":"mkdocs_simple_plugin/plugin/#ignore","title":"ignore","text":"<p>Directories whose name matches a glob pattern in this list will NOT be searched for documentation.</p>"},{"location":"mkdocs_simple_plugin/plugin/#ignore_hidden-deprecated","title":"ignore_hidden (deprecated)","text":"<p>Hidden directories will not be searched if this is true.</p>"},{"location":"mkdocs_simple_plugin/plugin/#merge_docs_dir","title":"merge_docs_dir","text":"<p>If true, the contents of the docs directory (if any) will be merged at the same level as all other documentation. Otherwise, the docs directory will be retained as a subdirectory in the result.</p>"},{"location":"mkdocs_simple_plugin/plugin/#build_docs_dir-renamed","title":"build_docs_dir (renamed)","text":"<p>Renamed build_dir</p>"},{"location":"mkdocs_simple_plugin/plugin/#build_dir","title":"build_dir","text":"<p>If set, the directory where docs will be collated to be build. Otherwise, the build docs directory will be a temporary directory.</p>"},{"location":"mkdocs_simple_plugin/plugin/#copy","title":"copy","text":"<p>If set, docs will be copied to the build_docs_dir. Otherwise, files will be used in place.</p>"},{"location":"mkdocs_simple_plugin/plugin/#include_extensions-renamed","title":"include_extensions (renamed)","text":"<p>Renamed include</p>"},{"location":"mkdocs_simple_plugin/plugin/#include","title":"include","text":"<p>Any file in the searched directories whose name contains a string in this list will simply be copied to the generated documentation.</p>"},{"location":"mkdocs_simple_plugin/plugin/#semiliterate","title":"semiliterate","text":"<p>The semiliterate settings allows the extraction of markdown from inside source files. It is defined as a list of blocks of settings for different filename patterns (typically matching filename extensions). All regular expression parameters use ordinary Python <code>re</code> syntax.</p>"},{"location":"mkdocs_simple_plugin/plugin/#pattern","title":"pattern","text":"<p>Any file in the searched directories whose name contains this required regular expression parameter will be scanned.</p>"},{"location":"mkdocs_simple_plugin/plugin/#destination","title":"destination","text":"<p>By default, the extracted documentation will be copied to a file whose name is generated by removing the (last) extension from the original filename, if any, and appending <code>.md</code>. However, if this parameter is specified, it will be expanded as a template using the match object from matching \"pattern\" against the filename, to produce the name of the destination file.</p>"},{"location":"mkdocs_simple_plugin/plugin/#terminate","title":"terminate","text":"<p>If specified, all extraction from the file is terminated when a line containing this regexp is encountered (whether or not any extraction is currently active per the parameters below). The last matching group in the <code>terminate</code> expression, if any, is written to the destination file; note that \"start\" and \"stop\" below share that same behavior.</p>"},{"location":"mkdocs_simple_plugin/plugin/#extract","title":"extract","text":"<p>This parameter determines what will be extracted from a scanned file that matches the pattern above. Its value should be a block or list of blocks of settings.</p>"},{"location":"mkdocs_simple_plugin/plugin/#start","title":"start","text":"<p>(optional) The regex pattern to indicate the start of extraction.</p> <p>Only the first mode whose <code>start</code> expression matches is activated, so at most one mode of extraction can be active at any time. When an extraction is active, lines from the scanned file are processed into the destination file.</p> <p>Note</p> <p>The (last) extraction mode (if any) with no <code>start</code>   parameter is active starting at the first line of the scanned   file; there is no way this mode can be reactivated if it stops.   This convention allows for convenient \"front-matter\" extraction.</p>"},{"location":"mkdocs_simple_plugin/plugin/#stop","title":"stop","text":"<p>(optional) The regex pattern to indicate the stop of extraction.</p> <p>After the extraction has stopped, the file will continue to be searched for matching patterns starting with the next line of the scanned file. In this way the entire file will be processed looking for start-stop pairs.</p>"},{"location":"mkdocs_simple_plugin/plugin/#replace","title":"replace","text":"<p>The <code>replace</code> parameter allows extracted lines from a file to be transformed in simple ways by regular expressions, for example to strip leading comment symbols if necessary.</p> <p>The <code>replace</code> parameter is a list of substitutions to attempt. Each substitution is specified either by a two-element list of a regular expression and a template, or by just a regular expression.</p> <p>Once one of the <code>replace</code> patterns matches, processing stops; no further expressions are checked.</p>"},{"location":"mkdocs_simple_plugin/plugin/#build","title":"Build","text":"<p>You can build mkdocs from the command line using the standard command</p> <pre><code>mkdocs build\n</code></pre> <p>or you can generate and build at the same time see generator.</p>"},{"location":"mkdocs_simple_plugin/plugin/#run-a-local-server","title":"Run a local server","text":"<p>One of the best parts of mkdocs is the ability to serve (and update!) your documentation site locally.</p> <pre><code>mkdocs serve\n</code></pre>"},{"location":"mkdocs_simple_plugin/generator/","title":"Mkdocs Simple Generator","text":"<p><code>mkdocs_simple_gen</code> is a program that will automatically create a <code>mkdocs.yml</code> configuration file (only if needed) and optionally install dependencies, build, and serve the site.</p>"},{"location":"mkdocs_simple_plugin/generator/#installation","title":"Installation","text":"<p>Install the plugin with pip.</p> <pre><code>pip install mkdocs-simple-plugin\n</code></pre> <p>Python 3.x, 3.8, 3.9, 3.10, 3.11 supported.</p>"},{"location":"mkdocs_simple_plugin/generator/#cli-reference","title":"CLI Reference","text":""},{"location":"mkdocs_simple_plugin/generator/#mkdocs_simple_gen","title":"mkdocs_simple_gen","text":"<p>Generate and build a mkdocs site.</p> <p>Usage:</p> <pre><code>mkdocs_simple_gen [OPTIONS] [MKDOCS_ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --config-file TEXT    Set the configuration file.\n  --build / --no-build  Build the site using mkdocs build.\n  --serve / --no-serve  Serve the site using mkdocs serve.\n  --help                Show this message and exit.\n</code></pre>"}]}