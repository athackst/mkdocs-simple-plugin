name: Release

on:
  release:
    types: [published]
  pull_request:
    types:
      - "labeled"
      - "opened"
      - "reopened"
      - "synchronize"
  workflow_dispatch:

jobs:
  deploy:
    if: contains(github.event.pull_request.labels.*.name, 'test-deploy') || github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.RELEASEBOT_TOKEN}}
      - name: Setup environment (test)
        if: github.ref != 'refs/heads/main'
        run: |
          echo "DRY_RUN=1" >> $GITHUB_ENV
          echo "VERSION=test-tag-${{ github.run_number }}" >> $GITHUB_ENV
      - name: Setup environment (release)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "VERSION=$(/usr/bin/git tag --list | sed 's|.*v\([0-9\.]*\).*|\1|')" >> $GITHUB_ENV
      - name: Bump version
        run: |
          git config --local user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --local user.name "${GITHUB_ACTOR}"
          .github/bump_tag.sh
      - name: Set up Python
        uses: actions/setup-python@v2.2.1
        with:
          python-version: "3.x"
      - name: Build and Publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          .github/publish_pypi.sh
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: |
            athackst/mkdocs-simple-plugin:latest
            athackst/mkdocs-simple-plugin:v${{ env.VERSION }}
          push: ${{ github.ref == 'refs/heads/main' }}
      - name: Cleanup
        run: |
          .github/cleanup_tag.sh
