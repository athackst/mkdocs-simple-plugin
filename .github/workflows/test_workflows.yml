name: Test workflows

on:
  pull_request:
    branches: [master]
    types:
      - "labeled"
      - "opened"
      - "reopened"
      - "synchronize"
  workflow_dispatch:

jobs:
  test-docs:
    if: contains(github.event.pull_request.labels.*.name, 'test-docs' )
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Docs
        uses: ./
        env:
          DRY_RUN: true

  test-tagging:
    if: contains(github.event.pull_request.labels.*.name, 'test-tagging')
    runs-on: ubuntu-latest
    env:
      TEST_TAG: "test-tag-${{ github.run_number }}"
      TEST_RELEASE: "test/v0.0.0-${{ github.run_number }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: git setup
        run: |
          git config --local user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --local user.name "${GITHUB_ACTOR}"
          git remote add action https://x-access-token:${RELEASEBOT_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
      - name: tag
        run: |
          git tag --force ${TEST_TAG}
          git push --force action ${TEST_TAG}
          sed "s/^    version=.*/    version='0.0.0',/" -i setup.py
          git add setup.py
          git commit -m "testing bump commit"
          git checkout -b ${TEST_RELEASE}
          git show-ref
          echo "Pushing to ${TEST_RELEASE}"
          git push --force action ${TEST_RELEASE}
          git tag --force ${TEST_TAG}
          git push --force action ${TEST_TAG}
      - name: cleanup tag
        if: ${{ always() }}
        run: git push --delete action ${TEST_TAG}
      - name: cleanup branch
        if: ${{ always() }}
        run: git push --delete action ${TEST_RELEASE}

  test-docker:
    if: contains(github.event.pull_request.labels.*.name, 'test-docker')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: athackst/mkdocs-simple-plugin:latest,athackst/mkdocs-simple-plugin:v${{ env.VERSION }}
          push: false
